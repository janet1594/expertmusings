import boto3
import json
import logging


cloudwatch = boto3.client('cloudwatch')

def lambda_handler(event, context):
    
    log = logging.getLogger(__name__)
    log.setLevel(logging.INFO)
    logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s (%(lineno)s) - %(levelname)s: %(message)s",
    datefmt='%Y.%m.%d %H:%M:%S')
    paginator = cloudwatch.get_paginator('describe_alarms')
    for response in paginator.paginate(StateValue='INSUFFICIENT_DATA'):
    # Do something with the alarm
        alarm_list = response['MetricAlarms']
        print(alarm_list)
        alarm_names = [alarm['AlarmName'] for alarm in alarm_list]
        val = 'Test'
        for alarm in alarm_names:
            if (alarm.find(val) != -1): 
                try:
                    log.info("disabled the Alarm Actions")
                    ack = cloudwatch.disable_alarm_actions(AlarmNames = [alarm])
                    #print("disabled Alarm")
                    respcode = ack['ResponseMetadata']['HTTPStatusCode']
                    if respcode == 200:
                        log.info("The Alarm has been disabled successfully")
                except Exception as e:
                    log.error(e)
 
        
